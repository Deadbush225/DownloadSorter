# Generated at configure time - Qt deployment script
# This script runs during the install phase to deploy Qt runtime dependencies

message(STATUS "=== Qt Deploy Runtime Script Executing ===")
message(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

# Set Qt installation directory from configure time
set(Qt6_DIR "@Qt6_DIR@")
set(QT_DEPLOY_SUPPORT_FILE "@QT_DEPLOY_SUPPORT_FILE@")
message(STATUS "Qt6_DIR: ${Qt6_DIR}")
message(STATUS "QT_DEPLOY_SUPPORT_FILE: ${QT_DEPLOY_SUPPORT_FILE}")

# Include Qt deployment support
if(EXISTS "${QT_DEPLOY_SUPPORT_FILE}")
    include("${QT_DEPLOY_SUPPORT_FILE}")
    message(STATUS "âœ“ Included Qt6DeploySupport.cmake from: ${QT_DEPLOY_SUPPORT_FILE}")
else()
    message(FATAL_ERROR "Qt6DeploySupport.cmake not found at: ${QT_DEPLOY_SUPPORT_FILE}")
endif()

# Verify that the deployment command is available
if(NOT COMMAND qt_deploy_runtime_dependencies)
    message(FATAL_ERROR "qt_deploy_runtime_dependencies command not available after including Qt6DeploySupport.cmake")
endif()

# Deployment configuration
set(QT_DEPLOY_BIN_DIR ".")
set(QT_DEPLOY_LIB_DIR ".")
set(QT_DEPLOY_PLUGINS_DIR ".")

# Exclusions and plugin selection  
set(QT_DEPLOY_EXCLUDE_MODULES "Network;NetworkInformation;NetworkAuth;OpenGL;OpenGLWidgets")
set(QT_DEPLOY_EXCLUDE_PLUGINS "tls;*;networkinformation;*;bearer;*;imageformats;qgif;qjpeg;qsvg;generic;qtuiotouchplugin;")
set(QT_DEPLOY_EXCLUDE_LIBRARIES "@QT_DEPLOY_EXCLUDE_LIBS_LIST@")
set(QT_DEPLOY_PLUGINS "@QT_DEPLOY_PLUGINS_LIST@")

# Compute installed executable paths
if(WIN32)
    set(_MAIN_EXE    "${CMAKE_INSTALL_PREFIX}/@MAIN_BASENAME@.exe")
    set(_UPDATER_EXE "${CMAKE_INSTALL_PREFIX}/@UPDATER_BASENAME@.exe")
elseif(APPLE)
    set(_MAIN_EXE    "${CMAKE_INSTALL_PREFIX}/@MAIN_BASENAME@.app")
    set(_UPDATER_EXE "${CMAKE_INSTALL_PREFIX}/@UPDATER_BASENAME@.app")
else()
    set(_MAIN_EXE    "${CMAKE_INSTALL_PREFIX}/@MAIN_BASENAME@")
    set(_UPDATER_EXE "${CMAKE_INSTALL_PREFIX}/@UPDATER_BASENAME@")
endif()

message(STATUS "Main executable: ${_MAIN_EXE}")
message(STATUS "Updater executable: ${_UPDATER_EXE}")

# Verify executables exist before deploying
if(NOT EXISTS "${_MAIN_EXE}")
    message(FATAL_ERROR "Main executable not found: ${_MAIN_EXE}")
endif()

if(NOT EXISTS "${_UPDATER_EXE}")
    message(WARNING "Updater executable not found: ${_UPDATER_EXE}")
endif()

message(STATUS "Deploying Qt runtime dependencies for main app...")

# Deploy main app - simplified configuration
qt_deploy_runtime_dependencies(
    EXECUTABLE "${_MAIN_EXE}"
    BIN_DIR "${CMAKE_INSTALL_PREFIX}"
    LIB_DIR "${CMAKE_INSTALL_PREFIX}"
    PLUGINS_DIR "${CMAKE_INSTALL_PREFIX}"
    NO_TRANSLATIONS
    VERBOSE
)

message(STATUS "Main app Qt deployment completed")

# Deploy Updater if present
if(EXISTS "${_UPDATER_EXE}")
    message(STATUS "Deploying Updater Qt dependencies...")
    qt_deploy_runtime_dependencies(
        EXECUTABLE "${_UPDATER_EXE}"
        BIN_DIR "${CMAKE_INSTALL_PREFIX}"
        LIB_DIR "${CMAKE_INSTALL_PREFIX}"
        PLUGINS_DIR "${CMAKE_INSTALL_PREFIX}"
        NO_TRANSLATIONS
        VERBOSE
    )
    message(STATUS "Updater Qt deployment completed")
else()
    message(STATUS "Updater executable not found, skipping deployment")
endif()

# List what was deployed
message(STATUS "=== Deployment Results ===")
file(GLOB_RECURSE deployed_files "${CMAKE_INSTALL_PREFIX}/*")
foreach(file ${deployed_files})
    if(NOT IS_DIRECTORY "${file}")
        file(RELATIVE_PATH rel_file "${CMAKE_INSTALL_PREFIX}" "${file}")
        message(STATUS "Deployed: ${rel_file}")
    endif()
endforeach()

message(STATUS "=== Qt Deploy Runtime Script Finished ===")