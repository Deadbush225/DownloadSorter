# Generated at configure time - Qt deployment script using windeployqt/macdeployqt
# This script runs during the install phase to deploy Qt runtime dependencies

message(STATUS "=== Qt Deploy Runtime Script Executing ===")
message(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

# Platform-specific deployment
if(WIN32)
    set(QT_DEPLOY_TOOL "@QT_WINDEPLOYQT_EXECUTABLE@")
    set(_MAIN_EXE "${CMAKE_INSTALL_PREFIX}/@MAIN_EXE_PATH@")
    set(_UPDATER_EXE "${CMAKE_INSTALL_PREFIX}/@UPDATER_EXE_PATH@")
    
    # windeployqt options for size optimization
    set(DEPLOY_OPTIONS
        --no-translations
        --no-system-d3d-compiler
        --no-opengl-sw
        --no-compiler-runtime
        --exclude-plugins qgif,qjpeg,qsvg,qtga,qwbmp,qwebp
    )
elseif(APPLE)
    set(QT_DEPLOY_TOOL "@QT_MACDEPLOYQT_EXECUTABLE@")
    set(_MAIN_EXE "${CMAKE_INSTALL_PREFIX}/@MAIN_EXE_PATH@")
    set(_UPDATER_EXE "${CMAKE_INSTALL_PREFIX}/@UPDATER_EXE_PATH@")
    
    # macdeployqt options
    set(DEPLOY_OPTIONS
        -no-plugins
    )
else()
    message(FATAL_ERROR "Unsupported platform for Qt deployment")
endif()

message(STATUS "Qt deploy tool: ${QT_DEPLOY_TOOL}")
message(STATUS "Main executable: ${_MAIN_EXE}")
message(STATUS "Updater executable: ${_UPDATER_EXE}")

# Verify executables exist before deploying
if(NOT EXISTS "${_MAIN_EXE}")
    message(FATAL_ERROR "Main executable not found: ${_MAIN_EXE}")
endif()

if(NOT EXISTS "${_UPDATER_EXE}")
    message(WARNING "Updater executable not found: ${_UPDATER_EXE}")
endif()

# Deploy main app
message(STATUS "Deploying Qt runtime for main app...")
execute_process(
    COMMAND "${QT_DEPLOY_TOOL}" "${_MAIN_EXE}" ${DEPLOY_OPTIONS}
    WORKING_DIRECTORY "${CMAKE_INSTALL_PREFIX}"
    RESULT_VARIABLE DEPLOY_RESULT
    OUTPUT_VARIABLE DEPLOY_OUTPUT
    ERROR_VARIABLE DEPLOY_ERROR
)

if(DEPLOY_RESULT EQUAL 0)
    message(STATUS "✓ Main app deployment successful")
    if(DEPLOY_OUTPUT)
        message(STATUS "Deploy output: ${DEPLOY_OUTPUT}")
    endif()
else()
    message(WARNING "Main app deployment failed with code: ${DEPLOY_RESULT}")
    if(DEPLOY_ERROR)
        message(WARNING "Deploy error: ${DEPLOY_ERROR}")
    endif()
    if(DEPLOY_OUTPUT)
        message(WARNING "Deploy output: ${DEPLOY_OUTPUT}")
    endif()
endif()

# Deploy Updater if present
if(EXISTS "${_UPDATER_EXE}")
    message(STATUS "Deploying Qt runtime for Updater...")
    execute_process(
        COMMAND "${QT_DEPLOY_TOOL}" "${_UPDATER_EXE}" ${DEPLOY_OPTIONS}
        WORKING_DIRECTORY "${CMAKE_INSTALL_PREFIX}"
        RESULT_VARIABLE UPDATER_DEPLOY_RESULT
        OUTPUT_VARIABLE UPDATER_DEPLOY_OUTPUT
        ERROR_VARIABLE UPDATER_DEPLOY_ERROR
    )
    
    if(UPDATER_DEPLOY_RESULT EQUAL 0)
        message(STATUS "✓ Updater deployment successful")
        if(UPDATER_DEPLOY_OUTPUT)
            message(STATUS "Updater deploy output: ${UPDATER_DEPLOY_OUTPUT}")
        endif()
    else()
        message(WARNING "Updater deployment failed with code: ${UPDATER_DEPLOY_RESULT}")
        if(UPDATER_DEPLOY_ERROR)
            message(WARNING "Updater deploy error: ${UPDATER_DEPLOY_ERROR}")
        endif()
        if(UPDATER_DEPLOY_OUTPUT)
            message(WARNING "Updater deploy output: ${UPDATER_DEPLOY_OUTPUT}")
        endif()
    endif()
else()
    message(STATUS "Updater executable not found, skipping deployment")
endif()

# List what was deployed
message(STATUS "=== Deployment Results ===")
file(GLOB_RECURSE deployed_files "${CMAKE_INSTALL_PREFIX}/*")
foreach(file ${deployed_files})
    if(NOT IS_DIRECTORY "${file}")
        file(RELATIVE_PATH rel_file "${CMAKE_INSTALL_PREFIX}" "${file}")
        file(SIZE "${file}" file_size)
        math(EXPR size_mb "${file_size} / 1048576")
        if(size_mb GREATER 0)
            message(STATUS "Deployed: ${rel_file} (${size_mb}MB)")
        endif()
    endif()
endforeach()

message(STATUS "=== Qt Deploy Runtime Script Finished ===")